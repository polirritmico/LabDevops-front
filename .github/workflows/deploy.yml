name: "2. Deployment"

on:
  workflow_run:
    workflows: ["1. Validations"]
    types: [completed]

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: release-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: false

jobs:
  build-push:
    name: Build and Push Docker Image
    if: ${{ github.event.workflow_run.head_branch == 'main' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

      - name: Snyk Container Scan
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk container scan
        continue-on-error: true
        run: |
          snyk auth "${SNYK_TOKEN}"
          snyk container test ${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --file=Backend/Dockerfile \
            --severity-threshold=low \
            --fail-on=high \
            --json-file-output=snyk-container-report.json

      - name: Snyk Container Summary
        if: always()
        run: |
          echo "### 🐳 Snyk Container Scan Summary" >> "$GITHUB_STEP_SUMMARY"

          TOTAL=$(jq '.vulnerabilities | length' snyk-container-report.json 2>/dev/null || echo 0)
          for level in critical high medium low; do
            COUNT=$(jq "[.vulnerabilities[] | select(.severity==\"$level\") ] | length" snyk-container-report.json 2>/dev/null || echo 0)
            echo "- **${level^}:** $COUNT" >> "$GITHUB_STEP_SUMMARY"
          done

          FAIL_COUNT=$(jq '[.vulnerabilities[] | select(.severity=="high" or .severity=="critical")] | length' snyk-container-report.json 2>/dev/null || echo 0)
          if [ "$FAIL_COUNT" -gt 0 ]; then
            echo "High/Critical vulnerabilities detected in container scan!"
            exit 1
          fi

      - name: Upload Snyk Container JSON Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-container-report
          path: snyk-container-report.json

      - name: Push Docker image (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production
